Sub BuildMimeBody ()

	Dim body As NotesMIMEEntity
	Dim header As NotesMIMEHeader
	Dim stream As NotesStream
	Dim splitter As Variant
	Dim breaker As String
	Dim nBreak As Integer
	Dim nTruncate As Integer

	Const BR = "<BR>"

	On Error Goto Sub_Error

	Set stream = session.CreateStream

	' set up temp directory for holding any attachments
	If (session.Platform Like "Win*") Then
		' try to locate the user's temp directory
		breaker = Chr(10) & Chr(13)
	Else
		breaker = Chr(10)
	End If

	' create initial Body container
	Set body = docSend.CreateMIMEEntity

	' build the Subject
	Set header = body.CreateHeader("Subject")
	Call header.SetHeaderVal("PATHway followup for engagement RR " & sRR)

	Set header = body.CreateHeader("To")
	Call header.SetHeaderVal(docStatus.GetItemValue("PWayAddr")(0))
	' Set header = body.CreateHeader("BlindCopyTo")
	' Call header.SetHeaderVal("owenge@us.ibm.com")

	' We want to force the return email address
	Set header = body.CreateHeader("Sender")
	Call header.SetHeaderVal("WebSphere PATHway <" & PathwayInternetMail & ">")
	Set header = body.CreateHeader("Principal")
	Call header.SetHeaderVal("WebSphere PATHway <" & PathwayInternetMail & ">")
	Set header = body.CreateHeader("From")
	Call header.SetHeaderVal("WebSphere PATHway <" & PathwayInternetMail & ">")

	' turn the URL into a hotspot link
	%REM
		' July 18, 2016: Survey questions removed
		FollowupText(8) = {  <a href = "} & FollowupText(8) & {">Followup Survey</a>}
	%END REM

	' build the body
	Call stream.WriteText(|<HTML>|)
	Call stream.WriteText(|<BODY>|)
	Call stream.WriteText(|<font size="2">|)

	Call stream.WriteText("Engagement Description: " & {<font size="2" color="#800000">} & sDesc & "</font>" & BR & BR)

	For nX = 0 To 6
		Call stream.WriteText(FollowupText(nX))
	Next
	Call stream.WriteText(BR & BR)

%REM
	' July 18, 2016: Survey questions removed
	For nX = 7 To 8
		Call stream.WriteText(FollowupText(nX))
	Next
%END REM

	' convert the newlines in the signature text to "<br>"
	Call stream.WriteText(BR & BR & BR)
	splitter = Split(sSig, breaker)
	For nBreak = 0 To Ubound(splitter)
		Call stream.WriteText(splitter(nBreak) & BR)
	Next

	Call stream.WriteText(|</font>|)
	Call stream.WriteText(|</BODY>|)
	Call stream.WriteText(|</HTML>|)

	Call body.SetContentFromText(stream, "text/html", ENC_QUOTED_PRINTABLE)

Sub_Exit:
	Exit Sub

Sub_Error:
	Call AddToStackTrace()

End Sub
